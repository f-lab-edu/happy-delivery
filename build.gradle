plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'checkstyle'
}

checkstyle {
    toolVersion = '9.3'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

apply plugin: 'checkstyle'

group = 'com.happy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    runtimeOnly 'mysql:mysql-connector-java:8.0.28'

    implementation 'org.flywaydb:flyway-core'

    //DB connection 랩핑해서 실제로 쿼리문이 어떻게 작성되는지 로그로 출력해주는 라이브러리.
    implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0")

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-spatial
    implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '5.4.4.Final'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.3m'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

task checkstyle(type: Checkstyle) {
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    source 'src/main/java/'
    include '**/*.java'
    showViolations true
    classpath = files()
    ignoreFailures = false
    maxWarnings = 0
}